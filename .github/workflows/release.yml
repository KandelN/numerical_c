name: Handle Release

on:
  release:
    types: [created]

permissions:
  contents: write

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Install dependencies for compiling C code
      - name: Install Dependencies
        if: matrix.os == 'ubuntu-latest'  # Install only for Ubuntu
        run: sudo apt-get update && sudo apt-get install -y build-essential mingw-w64 zip

      - name: Install Dependencies (Windows)
        if: matrix.os == 'windows-latest'  # Install only for Windows
        run: choco install mingw zip

      # Compile C code for Linux and Windows
      - name: List C Files Before Compiling
        run: find . -type f -name "*.c" ! -path "*/screenshots/*"

      - name: Compile for Linux (Ubuntu)
        if: matrix.os == 'ubuntu-latest'
        run: find . -type f -name "*.c" ! -path "*/screenshots/*" -exec gcc -o {}.out {} -lm \;

      - name: Compile for Windows (Windows)
        if: matrix.os == 'windows-latest'
        run: find . -type f -name "*.c" ! -path "*/screenshots/*" -exec gcc -o {}.exe {} -lm \;

      # List compiled files
      - name: List Compiled Files
        run: find . -type f \( -name "*.out" -o -name "*.exe" \)

      # Create ZIP files for Linux and Windows binaries
      - name: Create ZIP for Linux Binaries
        if: matrix.os == 'ubuntu-latest'
        run: zip -r linux-binaries.zip . -i "*.out" || echo "No linux binaries found"

      - name: Create ZIP for Windows Binaries (Windows)
        if: matrix.os == 'windows-latest'
        run: zip -r windows-binaries.zip . -i "*.exe" || echo "No Windows binaries found"

      # Upload ZIP files to GitHub Release
      - name: Upload ZIPs to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            linux-binaries.zip
            windows-binaries.zip